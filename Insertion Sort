//Insertion sort
Put the numbers in an unsorted pile.  Pick a number from the pile (usually the first one) and insert it into a new array.  Pick the nedt number from the unsorted pile, and also insert it into the 
new array.  It either goes before or after the first number that was picked, so now the two numbers are sorted.  Again, pick the next num from the unsorted pile, and insert it into the proper sorted
position.  Keep doing this until there are no more numbers in the pile.  The resulting array will be sorted correctly at this point.

JAVASCRIPT example: 
function insertionSort(array) {
  for (let i = 1; i < array.length; i++) {
    let key = array[i];
    let j = i - 1;

    // Move elements of array[0..i-1], that are greater than key,
    // to one position ahead of their current position
    while (j >= 0 && array[j] > key) {
      array[j + 1] = array[j];
      j = j - 1;
    }
    array[j + 1] = key;
  }
  return array;
}

// Example usage:
let arr = [12, 11, 13, 5, 6];
console.log("Unsorted array:", arr);

let sortedArray = insertionSort(arr);
console.log("Sorted array:", sortedArray);
Unsorted array: [12, 11, 13, 5, 6]
Sorted array: [5, 6, 11, 12, 13]

PYTHON example: 
def insertion_sort(arr):
    # Traverse through 1 to len(arr)
    for i in range(1, len(arr)):
        key = arr[i]
        
        # Move elements of arr[0..i-1], that are greater than key,
        # to one position ahead of their current position
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key

# Example usage
arr = [12, 11, 13, 5, 6]
print("Unsorted array:", arr)

insertion_sort(arr)
print("Sorted array:", arr)

JAVA example: 
public class InsertionSort {

    // Function to sort array using insertion sort
    public static void insertionSort(int[] array) {
        for (int i = 1; i < array.length; i++) {
            int key = array[i];
            int j = i - 1;

            // Move elements of array[0..i-1], that are greater than key,
            // to one position ahead of their current position
            while (j >= 0 && array[j] > key) {
                array[j + 1] = array[j];
                j = j - 1;
            }
            array[j + 1] = key;
        }
    }

    public static void main(String[] args) {
        int[] arr = {12, 11, 13, 5, 6};
        System.out.println("Unsorted array:");
        for (int num : arr) {
            System.out.print(num + " ");
        }

        insertionSort(arr);

        System.out.println("\nSorted array:");
        for (int num : arr) {
            System.out.print(num + " ");
        }
    }
}
